#!/usr/bin/env python3
"""
Script simplificado para criar a tabela agno_memories no Supabase
Usando o mesmo m√©todo que funcionou para message_history
"""

import os
from dotenv import load_dotenv
from supabase import create_client, Client

# Carrega vari√°veis de ambiente
load_dotenv()

def criar_tabela_agno_memories():
    """Cria a tabela agno_memories no Supabase usando m√©todo direto"""
    supabase_url = os.getenv("SUPABASE_URL")
    supabase_key = os.getenv("SUPABASE_SERVICE_ROLE_KEY")
    
    if not supabase_url or not supabase_key:
        print("‚ùå Credenciais do Supabase n√£o encontradas")
        return False
    
    try:
        supabase: Client = create_client(supabase_url, supabase_key)
        
        # Primeiro, verificar se a tabela j√° existe
        try:
            result = supabase.table("agno_memories").select("*").limit(1).execute()
            print("‚úÖ Tabela agno_memories j√° existe!")
            print(f"üìä Registros existentes: {len(result.data)}")
            return True
        except Exception as e:
            print(f"üìù Tabela agno_memories n√£o existe, criando...")
        
        # SQL para criar a tabela (m√©todo simples que funcionou)
        sql_create = """
        CREATE TABLE public.agno_memories (
            memory_id VARCHAR(255) PRIMARY KEY,
            memory TEXT NOT NULL,
            topics TEXT[] DEFAULT '{}',
            user_id VARCHAR(255),
            agent_id VARCHAR(255),
            team_id VARCHAR(255),
            created_at TIMESTAMP WITH TIME ZONE DEFAULT NOW(),
            updated_at TIMESTAMP WITH TIME ZONE DEFAULT NOW()
        );
        """
        
        # Executar usando o m√©todo que funcionou para message_history
        print("üîÑ Criando tabela agno_memories...")
        
        # Usar o m√©todo rpc do Supabase
        try:
            # Tentar criar usando RPC
            result = supabase.rpc('exec_sql', {'sql': sql_create}).execute()
            print("‚úÖ Tabela criada via RPC!")
        except Exception as e:
            print(f"‚ö†Ô∏è RPC falhou: {e}")
            
            # M√©todo alternativo: usar SQL direto
            try:
                # Usar o m√©todo que funcionou para message_history
                # Criar dados de teste para for√ßar cria√ß√£o da estrutura
                test_data = {
                    "memory_id": "setup-test-001",
                    "memory": "Teste inicial para criar estrutura da tabela",
                    "topics": ["setup", "test"],
                    "user_id": "setup-user",
                    "agent_id": "setup-agent",
                    "team_id": "setup-team"
                }
                
                # Isso deve criar a tabela automaticamente
                insert_result = supabase.table("agno_memories").insert(test_data).execute()
                print("‚úÖ Tabela criada via INSERT autom√°tico!")
                
                # Limpar dados de teste
                supabase.table("agno_memories").delete().eq("memory_id", "setup-test-001").execute()
                print("‚úÖ Dados de teste removidos")
                
            except Exception as e2:
                print(f"‚ùå M√©todo INSERT falhou: {e2}")
                return False
        
        # Verificar se a tabela foi criada
        try:
            result = supabase.table("agno_memories").select("*").limit(1).execute()
            print("‚úÖ Verifica√ß√£o: Tabela agno_memories est√° acess√≠vel!")
            
            # Criar √≠ndices importantes
            indices_sql = [
                "CREATE INDEX IF NOT EXISTS idx_agno_memories_user_id ON public.agno_memories(user_id);",
                "CREATE INDEX IF NOT EXISTS idx_agno_memories_agent_id ON public.agno_memories(agent_id);",
                "CREATE INDEX IF NOT EXISTS idx_agno_memories_created_at ON public.agno_memories(created_at);"
            ]
            
            for idx_sql in indices_sql:
                try:
                    supabase.rpc('exec_sql', {'sql': idx_sql}).execute()
                    print(f"‚úÖ √çndice criado")
                except:
                    print(f"‚ö†Ô∏è √çndice pode j√° existir")
            
            # Testar inser√ß√£o real
            test_memory = {
                "memory_id": "test-memory-001",
                "memory": "Usu√°rio prefere respostas t√©cnicas e detalhadas",
                "topics": ["preferencias", "estilo", "tecnico"],
                "user_id": "test-user-123",
                "agent_id": "test-agent-456"
            }
            
            insert_result = supabase.table("agno_memories").insert(test_memory).execute()
            print("‚úÖ Teste de inser√ß√£o bem-sucedido")
            print(f"üìù Memory ID: {insert_result.data[0]['memory_id']}")
            
            # Testar busca
            search_result = supabase.table("agno_memories").select("*").eq("user_id", "test-user-123").execute()
            print(f"‚úÖ Teste de busca: {len(search_result.data)} mem√≥rias encontradas")
            
            # Testar busca por t√≥picos
            topic_result = supabase.table("agno_memories").select("*").contains("topics", ["tecnico"]).execute()
            print(f"‚úÖ Busca por t√≥picos: {len(topic_result.data)} mem√≥rias com t√≥pico 'tecnico'")
            
            # Limpar teste
            supabase.table("agno_memories").delete().eq("memory_id", "test-memory-001").execute()
            print("‚úÖ Limpeza de teste conclu√≠da")
            
            return True
            
        except Exception as e:
            print(f"‚ùå Erro na verifica√ß√£o final: {e}")
            return False
            
    except Exception as e:
        print(f"‚ùå Erro geral: {e}")
        return False

if __name__ == "__main__":
    print("üöÄ Criando tabela agno_memories (m√©todo simplificado)...")
    sucesso = criar_tabela_agno_memories()
    
    if sucesso:
        print("üéâ Tabela agno_memories criada e testada com sucesso!")
        print("üìã Pronta para armazenar mem√≥rias do Agno!")
    else:
        print("‚ùå Falha na cria√ß√£o da tabela")
        print("üí° Tente criar manualmente no dashboard do Supabase")