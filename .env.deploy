# =============================================================================
# ARQUIVO DE AMBIENTE PARA DEPLOY - AGNOS API COMPLETA
# =============================================================================
# 
# INSTRUÇÕES:
# 1. Renomeie este arquivo para .env no servidor de produção
# 2. Substitua os valores de exemplo pelas suas chaves reais
# 3. Mantenha este arquivo seguro e nunca o commite no Git
# 
# =============================================================================

# -----------------------------------------------------------------------------
# CONFIGURAÇÕES DA API
# -----------------------------------------------------------------------------

# Chave de autenticação da API (substitua pela sua chave de produção)
X_API_KEY=your_x_api_key_here

# Porta onde a API irá rodar (padrão: 8003)
PORT=8003

# Ambiente de execução
ENVIRONMENT=production

# -----------------------------------------------------------------------------
# OPENAI CONFIGURATION
# -----------------------------------------------------------------------------

# Chave da API OpenAI (OBRIGATÓRIO)
OPENAI_API_KEY=your_openai_api_key_here

# Modelo padrão da OpenAI
OPENAI_MODEL=gpt-4o-mini

# -----------------------------------------------------------------------------
# SUPABASE CONFIGURATION
# -----------------------------------------------------------------------------

# URL do projeto Supabase (OBRIGATÓRIO)
SUPABASE_URL=https://seu-projeto.supabase.co

# Chave anônima do Supabase (OBRIGATÓRIO)
SUPABASE_ANON_KEY=sua_chave_anonima_aqui

# Chave de serviço do Supabase (OBRIGATÓRIO para operações administrativas)
SUPABASE_SERVICE_ROLE_KEY=sua_chave_service_role_aqui

# -----------------------------------------------------------------------------
# POSTGRESQL CONFIGURATION (Memória Contextual)
# -----------------------------------------------------------------------------

# String de conexão PostgreSQL (OBRIGATÓRIO para funcionalidade de memória)
DATABASE_URL=postgresql://usuario:senha@host:porta/agnos_memory

# Ou configuração separada do PostgreSQL:
# POSTGRES_HOST=seu_host_postgres
# POSTGRES_PORT=5432
# POSTGRES_DB=agnos_memory
# POSTGRES_USER=seu_usuario
# POSTGRES_PASSWORD=sua_senha

# -----------------------------------------------------------------------------
# WEBHOOK CONFIGURATION
# -----------------------------------------------------------------------------

# URL do webhook para receber respostas (OBRIGATÓRIO)
# Exemplo: https://seu-dominio.com/webhook
OUTBOUND_WEBHOOK_URL=https://seu-webhook-url.com/webhook

# Timeout para envio de webhooks (em segundos)
WEBHOOK_TIMEOUT=30

# Número máximo de tentativas de reenvio de webhook
WEBHOOK_MAX_RETRIES=3

# -----------------------------------------------------------------------------
# DEBOUNCE CONFIGURATION
# -----------------------------------------------------------------------------

# Tempo de debounce em milissegundos (padrão: 15000 = 15 segundos)
DEFAULT_DEBOUNCE_TIME=15000

# Tempo máximo de espera para debounce (em milissegundos)
MAX_DEBOUNCE_TIME=60000

# -----------------------------------------------------------------------------
# REDIS CONFIGURATION (Opcional - para cache e sessões)
# -----------------------------------------------------------------------------

# URL de conexão Redis (opcional)
# REDIS_URL=redis://localhost:6379

# Senha do Redis (se necessário)
# REDIS_PASSWORD=sua_senha_redis

# Database do Redis (padrão: 0)
# REDIS_DB=0

# -----------------------------------------------------------------------------
# LOGGING CONFIGURATION
# -----------------------------------------------------------------------------

# Nível de log (DEBUG, INFO, WARNING, ERROR, CRITICAL)
LOG_LEVEL=INFO

# Formato de log
LOG_FORMAT=%(asctime)s - %(name)s - %(levelname)s - %(message)s

# -----------------------------------------------------------------------------
# CORS CONFIGURATION
# -----------------------------------------------------------------------------

# Origens permitidas para CORS (separadas por vírgula)
CORS_ORIGINS=*

# Métodos HTTP permitidos
CORS_METHODS=GET,POST,PUT,DELETE,OPTIONS

# Headers permitidos
CORS_HEADERS=*

# -----------------------------------------------------------------------------
# RATE LIMITING (Opcional)
# -----------------------------------------------------------------------------

# Limite de requisições por minuto por IP
# RATE_LIMIT_PER_MINUTE=60

# Limite de requisições por hora por usuário
# RATE_LIMIT_PER_HOUR=1000

# -----------------------------------------------------------------------------
# HEALTH CHECK CONFIGURATION
# -----------------------------------------------------------------------------

# Intervalo de health check em segundos
HEALTH_CHECK_INTERVAL=30

# Timeout para health checks externos
HEALTH_CHECK_TIMEOUT=10

# =============================================================================
# NOTAS IMPORTANTES:
# 
# 1. SEGURANÇA: Nunca exponha este arquivo publicamente
# 2. BACKUP: Mantenha backup seguro das chaves de produção
# 3. ROTAÇÃO: Rotacione as chaves periodicamente
# 4. MONITORAMENTO: Configure alertas para falhas de API
# 5. LOGS: Configure logs adequados para produção
# 
# =============================================================================